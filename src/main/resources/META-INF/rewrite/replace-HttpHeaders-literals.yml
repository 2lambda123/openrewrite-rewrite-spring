#
# Copyright 2023 the original author or authors.
# <p>
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# <p>
# https://www.apache.org/licenses/LICENSE-2.0
# <p>
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.spring.http.ReplaceStringLiteralsWithHttpHeadersConstants
displayName: Replace String literals with `HttpHeaders` constants
description: Replace String literals with `org.springframework.http.HttpHeaders` constants.
applicability:
  anySource:
    - org.openrewrite.java.spring.http.SpringWebDependency
recipeList:
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.ACCEPT
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.ACCEPT_CHARSET
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.ACCEPT_ENCODING
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.ACCEPT_LANGUAGE
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.ACCEPT_PATCH
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.ACCEPT_RANGES
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.ACCESS_CONTROL_ALLOW_METHODS
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.ACCESS_CONTROL_EXPOSE_HEADERS
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.ACCESS_CONTROL_MAX_AGE
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.AGE
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.ALLOW
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.AUTHORIZATION
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.CACHE_CONTROL
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.CONNECTION
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.CONTENT_ENCODING
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.CONTENT_DISPOSITION
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.CONTENT_LANGUAGE
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.CONTENT_LENGTH
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.CONTENT_LOCATION
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.CONTENT_RANGE
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.CONTENT_TYPE
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.COOKIE
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.DATE
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.ETAG
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.EXPECT
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.EXPIRES
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.FROM
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.HOST
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.IF_MATCH
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.IF_MODIFIED_SINCE
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.IF_NONE_MATCH
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.IF_RANGE
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.IF_UNMODIFIED_SINCE
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.LAST_MODIFIED
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.LINK
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.LOCATION
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.MAX_FORWARDS
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.ORIGIN
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.PRAGMA
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.PROXY_AUTHENTICATE
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.PROXY_AUTHORIZATION
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.RANGE
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.REFERER
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.RETRY_AFTER
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.SERVER
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.SET_COOKIE
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.SET_COOKIE2
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.TE
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.TRAILER
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.TRANSFER_ENCODING
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.UPGRADE
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.USER_AGENT
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.VARY
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.VIA
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.WARNING
  - org.openrewrite.java.ReplaceStringLiteralWithConstant:
      fullyQualifiedConstantName: org.springframework.http.HttpHeaders.WWW_AUTHENTICATE
